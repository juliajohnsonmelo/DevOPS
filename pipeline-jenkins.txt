pipeline {
    agent any

    stages {
        //limpeza do repositório baixado no ultimo build
        stage('Cleanup') {
            steps {
                echo 'Deletando arquivos...'
                sh 'rm -rf DevOPS'
            }
        }
        //clonar repositório do github
        stage('Checkout') {
            steps {
                echo 'Baixando repositório...'
                git branch: 'main', url: 'https://github.com/juliajohnsonmelo/DevOPS.git'
            }
        }
        //build web
        stage('Build - WEB') {
            steps {
                dir('web'){
                    echo 'Construindo Imagem WEB...'
                    sh 'docker build -t xoulea/myapp-web:latest .'
                }
            }
        }
        stage('Build - BD') {
            steps {
                dir('db'){
                    echo 'Construindo Banco...'
                    sh 'docker build -t xoulea/myapp-db:latest .'
                }
            }
        }
       
        //deploy das imagens construidas no estágio anterior
        //stage('Deploy - WEB') {
        //    steps {
        //        dir('web'){
        //            echo 'Fazendo Deploy WEB'
        //            sh 'docker run -d --name myweb2 -p 8080:80 myapp-web'
        //        }
        //    }
        //}
        //stage('Deploy - DB') {
        //    steps {
        //        dir('db'){
        //            echo 'Fazendo Deploy DB'
        //            sh 'docker run -d --name mydb2 -p 5432:5432 myapp-db'
        //        }
        //    }
        //}
        
        //push das imagens
        stage('Push images'){
            steps{
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-cred', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                        sh "echo $PASS | docker login -u $USER --password-stdin"
                    }
                    parallel(
                        "Push DB": {
                            sh "docker push xoulea/myapp-db:latest"
                        },
                        "Push WEB":{
                            sh "docker push xoulea/myapp-web:latest"
                        }
                    )
                    sh "docker logout"
                }
            }
        }
    }
    post {
        success{
            echo "Pipeline concluída com Sucesso!"
        }
        failure{
            echo "A pipeline falhou!"
        }
    }
}
